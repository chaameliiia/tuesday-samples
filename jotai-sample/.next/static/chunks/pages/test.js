/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/test"],{

/***/ "./src/pages/test.tsx":
/*!****************************!*\
  !*** ./src/pages/test.tsx ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var jotai__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jotai */ \"./node_modules/jotai/esm/index.js\");\n/* harmony import */ var stores_inputAtom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! stores/inputAtom */ \"./src/stores/inputAtom.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\nvar _this = undefined;\nvar _s1 = $RefreshSig$();\nvar TestPage = function() {\n    _s1();\n    var ref = _slicedToArray((0,jotai__WEBPACK_IMPORTED_MODULE_2__.useAtom)(stores_inputAtom__WEBPACK_IMPORTED_MODULE_1__.inputAtom), 1), input = ref[0];\n    return(/*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n            __source: {\n                fileName: \"/Users/chaa/study/tuesday/jotai-sample/src/pages/test.tsx\",\n                lineNumber: 10\n            },\n            __self: _this,\n            children: [\n                \"input: \",\n                input\n            ]\n        })\n    }));\n};\n_s1(TestPage, \"BrCQ1umYhFSKP+0cybbAOjjILsU=\", false, function() {\n    return [\n        jotai__WEBPACK_IMPORTED_MODULE_2__.useAtom\n    ];\n});\n_c = TestPage;\n/* harmony default export */ __webpack_exports__[\"default\"] = (TestPage);\nvar _c;\n$RefreshReg$(_c, \"TestPage\");\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvdGVzdC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUErQjtBQUVhOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRTVDLEdBQUssQ0FBQ0UsUUFBUSxHQUFHLFFBQ2pCLEdBRHVCLENBQUM7O0lBQ3RCLEdBQUssQ0FBV0YsR0FBa0Isa0JBQWxCQSw4Q0FBTyxDQUFDQyx1REFBUyxPQUExQkUsS0FBSyxHQUFJSCxHQUFrQjtJQUVsQyxNQUFNO3dGQUVESSxDQUFHOzs7Ozs7O2dCQUFDLENBQ0k7Z0JBQUNELEtBQUs7Ozs7QUFLckIsQ0FBQztJQVhLRCxRQUFROztRQUNJRiwwQ0FBTzs7O0tBRG5CRSxRQUFRO0FBYWQsK0RBQWVBLFFBQVEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvcGFnZXMvdGVzdC50c3g/NDhhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VBdG9tIH0gZnJvbSBcImpvdGFpXCI7XG5cbmltcG9ydCB7IGlucHV0QXRvbSB9IGZyb20gXCJzdG9yZXMvaW5wdXRBdG9tXCI7XG5cbmNvbnN0IFRlc3RQYWdlID0gKCkgPT4ge1xuICBjb25zdCBbaW5wdXRdID0gdXNlQXRvbShpbnB1dEF0b20pO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxkaXY+XG4gICAgICAgIGlucHV0OiB7aW5wdXR9XG4gICAgICA8L2Rpdj5cblxuICAgIDwvPlxuICApXG59O1xuXG5leHBvcnQgZGVmYXVsdCBUZXN0UGFnZTtcbiJdLCJuYW1lcyI6WyJ1c2VBdG9tIiwiaW5wdXRBdG9tIiwiVGVzdFBhZ2UiLCJpbnB1dCIsImRpdiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pages/test.tsx\n");

/***/ }),

/***/ "./src/stores/inputAtom.ts":
/*!*********************************!*\
  !*** ./src/stores/inputAtom.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"inputAtom\": function() { return /* binding */ inputAtom; }\n/* harmony export */ });\n/* harmony import */ var jotai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jotai */ \"./node_modules/jotai/esm/index.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\nvar inputAtom = (0,jotai__WEBPACK_IMPORTED_MODULE_0__.atom)('');\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3RvcmVzL2lucHV0QXRvbS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEI7QUFFckIsR0FBSyxDQUFDQyxTQUFTLEdBQUdELDJDQUFJLENBQUMsQ0FBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc3RvcmVzL2lucHV0QXRvbS50cz84MmZhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGF0b20gfSBmcm9tICdqb3RhaSc7XG5cbmV4cG9ydCBjb25zdCBpbnB1dEF0b20gPSBhdG9tKCcnKVxuIl0sIm5hbWVzIjpbImF0b20iLCJpbnB1dEF0b20iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/stores/inputAtom.ts\n");

/***/ }),

/***/ "./node_modules/jotai/esm/index.js":
/*!*****************************************!*\
  !*** ./node_modules/jotai/esm/index.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Provider\": function() { return /* binding */ Provider; },\n/* harmony export */   \"SECRET_INTERNAL_getScopeContext\": function() { return /* binding */ getScopeContext; },\n/* harmony export */   \"atom\": function() { return /* binding */ atom; },\n/* harmony export */   \"useAtom\": function() { return /* binding */ useAtom; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nconst hasInitialValue = (atom) => \"init\" in atom;\nconst IS_EQUAL_PROMISE = Symbol();\nconst INTERRUPT_PROMISE = Symbol();\nconst isInterruptablePromise = (promise) => !!promise[INTERRUPT_PROMISE];\nconst createInterruptablePromise = (promise) => {\n  let interrupt;\n  const interruptablePromise = new Promise((resolve, reject) => {\n    interrupt = () => {\n      delete interruptablePromise[INTERRUPT_PROMISE];\n      resolve();\n    };\n    promise.then(resolve, reject);\n  });\n  interruptablePromise[IS_EQUAL_PROMISE] = (p) => interruptablePromise === p || promise === p || isInterruptablePromise(promise) && promise[IS_EQUAL_PROMISE](p);\n  interruptablePromise[INTERRUPT_PROMISE] = interrupt;\n  return interruptablePromise;\n};\nconst READ_ATOM = \"r\";\nconst WRITE_ATOM = \"w\";\nconst COMMIT_ATOM = \"c\";\nconst SUBSCRIBE_ATOM = \"s\";\nconst RESTORE_ATOMS = \"h\";\nconst DEV_SUBSCRIBE_STATE = \"n\";\nconst DEV_GET_MOUNTED_ATOMS = \"l\";\nconst DEV_GET_ATOM_STATE = \"a\";\nconst DEV_GET_MOUNTED = \"m\";\nconst createStore = (initialValues) => {\n  const atomStateMap = new WeakMap();\n  const mountedMap = new WeakMap();\n  const pendingMap = new Map();\n  let stateListeners;\n  let mountedAtoms;\n  if (typeof process === \"object\" && \"development\" !== \"production\") {\n    stateListeners = new Set();\n    mountedAtoms = new Set();\n  }\n  if (initialValues) {\n    for (const [atom, value] of initialValues) {\n      const atomState = { v: value, r: 0, d: new Map() };\n      if (typeof process === \"object\" && \"development\" !== \"production\") {\n        Object.freeze(atomState);\n        if (!hasInitialValue(atom)) {\n          console.warn(\"Found initial value for derived atom which can cause unexpected behavior\", atom);\n        }\n      }\n      atomStateMap.set(atom, atomState);\n    }\n  }\n  const getAtomState = (atom) => atomStateMap.get(atom);\n  const setAtomState = (atom, atomState) => {\n    if (typeof process === \"object\" && \"development\" !== \"production\") {\n      Object.freeze(atomState);\n    }\n    const prevAtomState = atomStateMap.get(atom);\n    atomStateMap.set(atom, atomState);\n    if (!pendingMap.has(atom)) {\n      pendingMap.set(atom, prevAtomState);\n    }\n  };\n  const prepareNextAtomState = (atom, dependencies) => {\n    const atomState = getAtomState(atom);\n    const nextAtomState = __spreadProps(__spreadValues({\n      r: 0\n    }, atomState), {\n      d: dependencies ? new Map(Array.from(dependencies).map((a) => {\n        var _a, _b;\n        return [a, (_b = (_a = getAtomState(a)) == null ? void 0 : _a.r) != null ? _b : 0];\n      })) : (atomState == null ? void 0 : atomState.d) || new Map()\n    });\n    return nextAtomState;\n  };\n  const setAtomValue = (atom, value, dependencies, promise) => {\n    var _a, _b;\n    const atomState = prepareNextAtomState(atom, dependencies);\n    if (promise && !((_a = atomState.p) == null ? void 0 : _a[IS_EQUAL_PROMISE](promise))) {\n      return;\n    }\n    (_b = atomState.c) == null ? void 0 : _b.call(atomState);\n    if (\"e\" in atomState || atomState.p || !(\"v\" in atomState) || !Object.is(atomState.v, value)) {\n      ++atomState.r;\n      if (atomState.d.has(atom)) {\n        atomState.d.set(atom, atomState.r);\n      }\n    }\n    atomState.v = value;\n    delete atomState.e;\n    delete atomState.p;\n    delete atomState.c;\n    delete atomState.i;\n    setAtomState(atom, atomState);\n  };\n  const setAtomReadError = (atom, error, dependencies, promise) => {\n    var _a, _b;\n    const atomState = prepareNextAtomState(atom, dependencies);\n    if (promise && !((_a = atomState.p) == null ? void 0 : _a[IS_EQUAL_PROMISE](promise))) {\n      return;\n    }\n    (_b = atomState.c) == null ? void 0 : _b.call(atomState);\n    delete atomState.p;\n    delete atomState.c;\n    delete atomState.i;\n    atomState.e = error;\n    setAtomState(atom, atomState);\n  };\n  const setAtomReadPromise = (atom, promise, dependencies) => {\n    var _a, _b;\n    const atomState = prepareNextAtomState(atom, dependencies);\n    if ((_a = atomState.p) == null ? void 0 : _a[IS_EQUAL_PROMISE](promise)) {\n      return;\n    }\n    (_b = atomState.c) == null ? void 0 : _b.call(atomState);\n    delete atomState.e;\n    const interruptablePromise = createInterruptablePromise(promise);\n    atomState.p = interruptablePromise;\n    atomState.c = interruptablePromise[INTERRUPT_PROMISE];\n    setAtomState(atom, atomState);\n  };\n  const setAtomInvalidated = (atom) => {\n    const atomState = prepareNextAtomState(atom);\n    atomState.i = atomState.r;\n    setAtomState(atom, atomState);\n  };\n  const readAtomState = (atom, force) => {\n    if (!force) {\n      const atomState = getAtomState(atom);\n      if (atomState) {\n        atomState.d.forEach((_, a) => {\n          if (a !== atom) {\n            if (!mountedMap.has(a)) {\n              readAtomState(a);\n            } else {\n              const aState = getAtomState(a);\n              if (aState && !(\"e\" in aState) && !aState.p && aState.r === aState.i) {\n                readAtomState(a, true);\n              }\n            }\n          }\n        });\n        if (Array.from(atomState.d.entries()).every(([a, r]) => {\n          const aState = getAtomState(a);\n          return aState && !(\"e\" in aState) && !aState.p && aState.r !== aState.i && aState.r === r;\n        })) {\n          return atomState;\n        }\n      }\n    }\n    let error;\n    let promise;\n    let value;\n    const dependencies = new Set();\n    try {\n      const promiseOrValue = atom.read((a) => {\n        dependencies.add(a);\n        const aState = a === atom ? getAtomState(a) : readAtomState(a);\n        if (aState) {\n          if (\"e\" in aState) {\n            throw aState.e;\n          }\n          if (aState.p) {\n            throw aState.p;\n          }\n          return aState.v;\n        }\n        if (hasInitialValue(a)) {\n          return a.init;\n        }\n        throw new Error(\"no atom init\");\n      });\n      if (promiseOrValue instanceof Promise) {\n        promise = promiseOrValue.then((value2) => {\n          setAtomValue(atom, value2, dependencies, promise);\n          flushPending();\n        }).catch((e) => {\n          if (e instanceof Promise) {\n            if (!isInterruptablePromise(e) || !e[INTERRUPT_PROMISE]) {\n              e.finally(() => readAtomState(atom, true));\n            }\n            return e;\n          }\n          setAtomReadError(atom, e, dependencies, promise);\n          flushPending();\n        });\n      } else {\n        value = promiseOrValue;\n      }\n    } catch (errorOrPromise) {\n      if (errorOrPromise instanceof Promise) {\n        promise = errorOrPromise;\n      } else {\n        error = errorOrPromise;\n      }\n    }\n    if (error) {\n      setAtomReadError(atom, error, dependencies);\n    } else if (promise) {\n      setAtomReadPromise(atom, promise, dependencies);\n    } else {\n      setAtomValue(atom, value, dependencies);\n    }\n    return getAtomState(atom);\n  };\n  const readAtom = (readingAtom) => {\n    const atomState = readAtomState(readingAtom);\n    return atomState;\n  };\n  const addAtom = (addingAtom) => {\n    let mounted = mountedMap.get(addingAtom);\n    if (!mounted) {\n      mounted = mountAtom(addingAtom);\n    }\n    return mounted;\n  };\n  const canUnmountAtom = (atom, mounted) => !mounted.l.size && (!mounted.d.size || mounted.d.size === 1 && mounted.d.has(atom));\n  const delAtom = (deletingAtom) => {\n    const mounted = mountedMap.get(deletingAtom);\n    if (mounted && canUnmountAtom(deletingAtom, mounted)) {\n      unmountAtom(deletingAtom);\n    }\n  };\n  const invalidateDependents = (atom) => {\n    const mounted = mountedMap.get(atom);\n    mounted == null ? void 0 : mounted.d.forEach((dependent) => {\n      if (dependent === atom) {\n        return;\n      }\n      setAtomInvalidated(dependent);\n      invalidateDependents(dependent);\n    });\n  };\n  const writeAtomState = (atom, update) => {\n    const writeGetter = (a, unstable_promise = false) => {\n      const aState = readAtomState(a);\n      if (\"e\" in aState) {\n        throw aState.e;\n      }\n      if (aState.p) {\n        if (typeof process === \"object\" && \"development\" !== \"production\") {\n          if (unstable_promise) {\n            console.info(\"promise option in getter is an experimental feature.\", a);\n          } else {\n            console.warn(\"Reading pending atom state in write operation. We throw a promise for now.\", a);\n          }\n        }\n        if (unstable_promise) {\n          return aState.p.then(() => writeGetter(a, unstable_promise));\n        }\n        throw aState.p;\n      }\n      if (\"v\" in aState) {\n        return aState.v;\n      }\n      if (typeof process === \"object\" && \"development\" !== \"production\") {\n        console.warn(\"[Bug] no value found while reading atom in write operation. This is probably a bug.\", a);\n      }\n      throw new Error(\"no value found\");\n    };\n    const setter = (a, v) => {\n      let promiseOrVoid2;\n      if (a === atom) {\n        if (!hasInitialValue(a)) {\n          throw new Error(\"no atom init\");\n        }\n        if (v instanceof Promise) {\n          promiseOrVoid2 = v.then((resolvedValue) => {\n            setAtomValue(a, resolvedValue);\n            invalidateDependents(a);\n            flushPending();\n          }).catch((e) => {\n            setAtomReadError(atom, e);\n            flushPending();\n          });\n          setAtomReadPromise(atom, promiseOrVoid2);\n        } else {\n          setAtomValue(a, v);\n        }\n        invalidateDependents(a);\n        flushPending();\n      } else {\n        promiseOrVoid2 = writeAtomState(a, v);\n      }\n      return promiseOrVoid2;\n    };\n    const promiseOrVoid = atom.write(writeGetter, setter, update);\n    flushPending();\n    return promiseOrVoid;\n  };\n  const writeAtom = (writingAtom, update) => {\n    const promiseOrVoid = writeAtomState(writingAtom, update);\n    return promiseOrVoid;\n  };\n  const isActuallyWritableAtom = (atom) => !!atom.write;\n  const mountAtom = (atom, initialDependent) => {\n    const atomState = readAtomState(atom);\n    atomState.d.forEach((_, a) => {\n      if (a !== atom) {\n        const aMounted = mountedMap.get(a);\n        if (aMounted) {\n          aMounted.d.add(atom);\n        } else {\n          mountAtom(a, atom);\n        }\n      }\n    });\n    const mounted = {\n      d: new Set(initialDependent && [initialDependent]),\n      l: new Set(),\n      u: void 0\n    };\n    mountedMap.set(atom, mounted);\n    if (typeof process === \"object\" && \"development\" !== \"production\") {\n      mountedAtoms.add(atom);\n    }\n    if (isActuallyWritableAtom(atom) && atom.onMount) {\n      const setAtom = (update) => writeAtom(atom, update);\n      mounted.u = atom.onMount(setAtom);\n    }\n    return mounted;\n  };\n  const unmountAtom = (atom) => {\n    var _a;\n    const onUnmount = (_a = mountedMap.get(atom)) == null ? void 0 : _a.u;\n    if (onUnmount) {\n      onUnmount();\n    }\n    mountedMap.delete(atom);\n    if (typeof process === \"object\" && \"development\" !== \"production\") {\n      mountedAtoms.delete(atom);\n    }\n    const atomState = getAtomState(atom);\n    if (atomState) {\n      atomState.d.forEach((_, a) => {\n        if (a !== atom) {\n          const mounted = mountedMap.get(a);\n          if (mounted) {\n            mounted.d.delete(atom);\n            if (canUnmountAtom(a, mounted)) {\n              unmountAtom(a);\n            }\n          }\n        }\n      });\n    } else if (typeof process === \"object\" && \"development\" !== \"production\") {\n      console.warn(\"[Bug] could not find atom state to unmount\", atom);\n    }\n  };\n  const mountDependencies = (atom, atomState, prevReadDependencies) => {\n    const dependencies = new Set(atomState.d.keys());\n    prevReadDependencies.forEach((_, a) => {\n      if (dependencies.has(a)) {\n        dependencies.delete(a);\n        return;\n      }\n      const mounted = mountedMap.get(a);\n      if (mounted) {\n        mounted.d.delete(atom);\n        if (canUnmountAtom(a, mounted)) {\n          unmountAtom(a);\n        }\n      }\n    });\n    dependencies.forEach((a) => {\n      const mounted = mountedMap.get(a);\n      if (mounted) {\n        const dependents = mounted.d;\n        dependents.add(atom);\n      } else {\n        mountAtom(a, atom);\n      }\n    });\n  };\n  const flushPending = () => {\n    const pending = Array.from(pendingMap);\n    pendingMap.clear();\n    pending.forEach(([atom, prevAtomState]) => {\n      const atomState = getAtomState(atom);\n      if (atomState && atomState.d !== (prevAtomState == null ? void 0 : prevAtomState.d)) {\n        mountDependencies(atom, atomState, (prevAtomState == null ? void 0 : prevAtomState.d) || new Map());\n      }\n      const mounted = mountedMap.get(atom);\n      mounted == null ? void 0 : mounted.l.forEach((listener) => listener());\n      if (typeof process === \"object\" && \"development\" !== \"production\") {\n        stateListeners.forEach((l) => l(atom, !prevAtomState));\n      }\n    });\n  };\n  const commitAtom = (_atom) => {\n    flushPending();\n  };\n  const subscribeAtom = (atom, callback) => {\n    const mounted = addAtom(atom);\n    const listeners = mounted.l;\n    listeners.add(callback);\n    return () => {\n      listeners.delete(callback);\n      delAtom(atom);\n    };\n  };\n  const restoreAtoms = (values) => {\n    for (const [atom, value] of values) {\n      if (hasInitialValue(atom)) {\n        setAtomValue(atom, value);\n        invalidateDependents(atom);\n      }\n    }\n    flushPending();\n  };\n  if (typeof process === \"object\" && \"development\" !== \"production\") {\n    return {\n      [READ_ATOM]: readAtom,\n      [WRITE_ATOM]: writeAtom,\n      [COMMIT_ATOM]: commitAtom,\n      [SUBSCRIBE_ATOM]: subscribeAtom,\n      [RESTORE_ATOMS]: restoreAtoms,\n      [DEV_SUBSCRIBE_STATE]: (l) => {\n        stateListeners.add(l);\n        return () => {\n          stateListeners.delete(l);\n        };\n      },\n      [DEV_GET_MOUNTED_ATOMS]: () => mountedAtoms.values(),\n      [DEV_GET_ATOM_STATE]: (a) => atomStateMap.get(a),\n      [DEV_GET_MOUNTED]: (a) => mountedMap.get(a)\n    };\n  }\n  return {\n    [READ_ATOM]: readAtom,\n    [WRITE_ATOM]: writeAtom,\n    [COMMIT_ATOM]: commitAtom,\n    [SUBSCRIBE_ATOM]: subscribeAtom,\n    [RESTORE_ATOMS]: restoreAtoms\n  };\n};\n\nconst createScopeContainer = (initialValues) => {\n  const store = createStore(initialValues);\n  return { s: store };\n};\nconst ScopeContextMap = new Map();\nconst getScopeContext = (scope) => {\n  if (!ScopeContextMap.has(scope)) {\n    ScopeContextMap.set(scope, (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(createScopeContainer()));\n  }\n  return ScopeContextMap.get(scope);\n};\n\nconst Provider = ({\n  initialValues,\n  scope,\n  children\n}) => {\n  const scopeContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  if (!scopeContainerRef.current) {\n    scopeContainerRef.current = createScopeContainer(initialValues);\n  }\n  if (typeof process === \"object\" && \"development\" !== \"production\" && \"development\" !== \"test\") {\n    useDebugState(scopeContainerRef.current);\n  }\n  const ScopeContainerContext = getScopeContext(scope);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ScopeContainerContext.Provider, {\n    value: scopeContainerRef.current\n  }, children);\n};\nconst atomToPrintable = (atom) => atom.debugLabel || atom.toString();\nconst stateToPrintable = ([store, atoms]) => Object.fromEntries(atoms.flatMap((atom) => {\n  var _a, _b;\n  const mounted = (_a = store[DEV_GET_MOUNTED]) == null ? void 0 : _a.call(store, atom);\n  if (!mounted) {\n    return [];\n  }\n  const dependents = mounted.d;\n  const atomState = ((_b = store[DEV_GET_ATOM_STATE]) == null ? void 0 : _b.call(store, atom)) || {};\n  return [\n    [\n      atomToPrintable(atom),\n      {\n        value: atomState.e || atomState.p || atomState.v,\n        dependents: Array.from(dependents).map(atomToPrintable)\n      }\n    ]\n  ];\n}));\nconst useDebugState = (scopeContainer) => {\n  const store = scopeContainer.s;\n  const [atoms, setAtoms] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    var _a;\n    const callback = () => {\n      var _a2;\n      setAtoms(Array.from(((_a2 = store[DEV_GET_MOUNTED_ATOMS]) == null ? void 0 : _a2.call(store)) || []));\n    };\n    const unsubscribe = (_a = store[DEV_SUBSCRIBE_STATE]) == null ? void 0 : _a.call(store, callback);\n    callback();\n    return unsubscribe;\n  }, [store]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)([store, atoms], stateToPrintable);\n};\n\nlet keyCount = 0;\nfunction atom(read, write) {\n  const key = `atom${++keyCount}`;\n  const config = {\n    toString: () => key\n  };\n  if (typeof read === \"function\") {\n    config.read = read;\n  } else {\n    config.init = read;\n    config.read = (get) => get(config);\n    config.write = (get, set, update) => set(config, typeof update === \"function\" ? update(get(config)) : update);\n  }\n  if (write) {\n    config.write = write;\n  }\n  return config;\n}\n\nconst isWritable = (atom) => !!atom.write;\nfunction useAtom(atom, scope) {\n  if (\"scope\" in atom) {\n    console.warn(\"atom.scope is deprecated. Please do useAtom(atom, scope) instead.\");\n    scope = atom.scope;\n  }\n  const ScopeContext = getScopeContext(scope);\n  const store = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ScopeContext).s;\n  const getAtomValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    const atomState = store[READ_ATOM](atom);\n    if (\"e\" in atomState) {\n      throw atomState.e;\n    }\n    if (atomState.p) {\n      throw atomState.p;\n    }\n    if (\"v\" in atomState) {\n      return atomState.v;\n    }\n    throw new Error(\"no atom value\");\n  }, [store, atom]);\n  const [value, forceUpdate] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(getAtomValue, void 0, getAtomValue);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const unsubscribe = store[SUBSCRIBE_ATOM](atom, forceUpdate);\n    forceUpdate();\n    return unsubscribe;\n  }, [store, atom]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    store[COMMIT_ATOM](atom);\n  });\n  const setAtom = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((update) => {\n    if (isWritable(atom)) {\n      return store[WRITE_ATOM](atom, update);\n    } else {\n      throw new Error(\"not writable atom\");\n    }\n  }, [store, atom]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(value);\n  return [value, setAtom];\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/jotai/esm/index.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2Ftest&absolutePagePath=%2FUsers%2Fchaa%2Fstudy%2Ftuesday%2Fjotai-sample%2Fsrc%2Fpages%2Ftest.tsx!":
/*!*******************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2Ftest&absolutePagePath=%2FUsers%2Fchaa%2Fstudy%2Ftuesday%2Fjotai-sample%2Fsrc%2Fpages%2Ftest.tsx! ***!
  \*******************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/test\",\n      function () {\n        return __webpack_require__(/*! ./src/pages/test.tsx */ \"./src/pages/test.tsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/test\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/cGFnZT0lMkZ0ZXN0JmFic29sdXRlUGFnZVBhdGg9JTJGVXNlcnMlMkZjaGFhJTJGc3R1ZHklMkZ0dWVzZGF5JTJGam90YWktc2FtcGxlJTJGc3JjJTJGcGFnZXMlMkZ0ZXN0LnRzeCEuanMiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxrREFBMkQ7QUFDbEY7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzJjNTgiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi90ZXN0XCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwiL1VzZXJzL2NoYWEvc3R1ZHkvdHVlc2RheS9qb3RhaS1zYW1wbGUvc3JjL3BhZ2VzL3Rlc3QudHN4XCIpO1xuICAgICAgfVxuICAgIF0pO1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIHdpbmRvdy5fX05FWFRfUC5wdXNoKFtcIi90ZXN0XCJdKVxuICAgICAgfSk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2Ftest&absolutePagePath=%2FUsers%2Fchaa%2Fstudy%2Ftuesday%2Fjotai-sample%2Fsrc%2Fpages%2Ftest.tsx!\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["pages/_app","main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2Ftest&absolutePagePath=%2FUsers%2Fchaa%2Fstudy%2Ftuesday%2Fjotai-sample%2Fsrc%2Fpages%2Ftest.tsx!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);